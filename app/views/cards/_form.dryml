<include src="rapid" plugin="hobo"/>
<include src="taglibs/auto/rapid/cards"/>
<include src="taglibs/auto/rapid/pages"/>
<include src="taglibs/auto/rapid/forms"/>
<include src="paperclip" plugin="paperclip_with_hobo"/>
<include src="taglibs/application"/>






<def tag="start-list-from-pad">                                               <%
  that = this
  element, collection =
    mainly_tabular_view ? ["row" ,"table"] : ["item","list" ]
  pertinent = that                         &&
    that.items.count == 0        &&
    (pads = that.pertinent_pads)                                    %>
  <repeat with="&pads" if="&pertinent">                                       <%
    k = (is_row = this.class.name == 'Card') ? this.recursive_kind : this     %>
    <unless test="&this.blank?">                                              <%
      tooltip, label = [
        "Start list with #{k.indefinite} #{element}",
        "Start list with #{k}"                      ]                         %>
      <add-item-or-row-form with="&that"
                            element="&element"
                            label="&label"
                            tooltip="&tooltip"
                            collection-id="#{that.id}"
                            pad="&this"                />
    </unless>
  </repeat>
</def>

<def tag="start-list">
  <if test="&this">
    <if test="&this.items.count == 0">
      <%    element, collection =
        mainly_tabular_view ? ["row" ,"table"] : ["item","list" ]
      label, tooltip =
        ["Start #{collection}",
        "Add a first #{element} to #{collection} #{this.reference_name}"] %>
      <add-item-or-row-form
        element="&element"
        label="&label"
        tooltip="&tooltip"
        collection-id="#{this.id}"
        />
    </if>
  </if>
  <else>nothing to add an item to</else>
</def>

<def tag="start-any-list">
  <start-list />                                                              <%
  pertinent = this                           &&
    this.pertinent_pads.length > 0 &&
    this.items.count == 0                                         %>
  <start-list-from-pad if="&pertinent" />
</def>



<def tag="add-row">
  <if test="&this && this.list">                                              <%
    element, collection =
      mainly_tabular_view ? ["row" ,"table"] : ["item","list" ]
    position = this.send "#{collection}_position"
    tooltip, label      =
      ["Add a row below this one",
      "Add row"]                                                             %>
    <add-item-or-row-form
      element="&element"
      label="&label"
      tooltip="&tooltip"
      collection-id="#{this.list_id}"
      position="&position"
      />
  </if>
  <else></else>
</def>


<def tag="start-list">
  <if test="&this">
    <if test="&this.items.count == 0">
      <%    element, collection =
        mainly_tabular_view ? ["row" ,"table"] : ["item","list" ]
      label, tooltip =
        ["Start #{collection}",
        "Add a first #{element} to #{collection} #{this.reference_name}"] %>
      <add-item-or-row-form
        element="&element"
        label="&label"
        tooltip="&tooltip"
        collection-id="#{this.id}"
        />
    </if>
  </if>
  <else>nothing to add an item to</else>
</def>

<def tag="add-pad-rows">                                                      <%
  element, collection =
    mainly_tabular_view ? ["row" ,"table"] : ["item","list" ]
  unless this.list.nil?
    last_item = this.list.items.count == this.list_position
  end
  no_kind = ['', 'item'].include? this.kind
  collection_id = this.list.id unless this.list.nil?
  position = this.send "#{collection}_position"
%>
  <repeat with="&this.pertinent_pads"
          if="&(that = this) && (list_id = this.list)">                       <%
            k = (is_a_row = this.class.name == 'Card') ? this.recursive_kind : this
            tooltip, label = [
              "Add a #{k} row below this one",
              "Add #{  k} row"]
            el = "#{k} #{element}"
            condition = this && is_a_row || this.length > 0
            p = is_a_row ? this : "cf::#{this.id}"                                    %>
    <add-item-or-row-form with="&that" if="&condition"
                          element="&el"
                          label="&label"
                          tooltip="&tooltip"
                          collection-id="&collection_id"
                          pad="&p"
                          position="&position"
                          />
  </repeat>
</def>



<def tag="add-item-or-row-form">                                              <%
  style = "add-#{attributes[:element]}"
  submit_style = "toy-nav tooltip #{style}"
  new_card = this.class.new(
    :list_id  => attributes[:collection_id]      ,
    :kind     => attributes[:item_kind]     || '',
    :suite_id => this.suite_group.id             ,
    :view     => 'none'                          )
  p = attributes[:pad]
  case c = p.class.name
  when 'NilClass'
  when 'String'
    if p && p.length > 0
      new_card.mold = this.class.find_pad p
    end
  when 'Card'
    new_card.mold = p
  else
    crash
  end                                                                         %>
  <form class="&style" with="&new_card">
    <submit label=                    "&attributes[:label]"
            title="&attributes[:tooltip] || attributes[:label]"
            class="&submit_style" />

  </form>
</def>



<def tag="add-rows">
  <if test="&this && (list = this.list)">
    <%  element, collection =
      inner = this.id == @card.id ?  "" : "inner "
    article = element == 'item' || inner > '' ? 'an' : 'a'
    the_items = list.items
    count = the_items.count     %>
    <if test="&count > 0 && this.list_id != @card.list_id">
      <add-row      with="&the_items[0]" />
      <add-pad-rows with="&the_items[0]" />
    </if>
  </if>
</def>






<def tag="show-card-inline">
  <%  tooltip =
    "Leave this page to concentrate only on #{this.long_reference_name}" %>
  <a class="zoom-in" title="&tooltip" if="&params[:id].to_i != this.id">
    <%= "go" || image_tag("icons/zoom.png") %>
  </a>
</def>
<def tag="recursive-card">
  <% (@no_move ||= []).push !!this.ref %>
  <table               class="card inner" if="&@no_move.include? true">
    <hierarchical-layout />
  </table><else><table class="card inner drop-target"                 >
      <hierarchical-layout />
    </table></else>
  <% @no_move.pop %>
</def>

<def tag="hierarchical-layout">
  <self-and-aspects-row />
  <list-row             />
</def>

<def tag="hierarchical-card">
  <% (@no_move ||= []).push !!this.ref %>
  <table               class="card first-card" if="&@no_move.include? true">
    <hierarchical-layout />
  </table><else><table class="card first-card drop-target"                 >
      <hierarchical-layout />
    </table                     ></else>
  <% @no_move.pop %>
</def>



<def tag="toggle-aspect-or-item">                                            <%=
  horiz = attributes[:which] == "aspects"
  sub_elements =  horiz ?       "aspects" : "items"
  display_subs  = horiz ?       "Aspects" : "Sub-Items"
  part = prep this, sub_elements
  if this.send(sub_elements).count > 0
    link_to "#{part[:show_hide]} #{display_subs}",
      url_for(:controller => "cards"                          ,
      :action     => "#{part[:action]}_#{part[:name]}",
      :id         => this.id                          )
  end                                                                         %>
</def>


<def tag="aspects-table">
  <table class="aspects-table"     if="&this.saspects">
    <tr  class="aspects-row">
    <repeat with="&this.aspects" if="&this.aspects">
      <aspect-cell />
    </repeat>
    <spacer-cell />
    </tr>
  </table>
</def>

<def tag="aspect-cell">
  <%  klass="aspect-cell #{this.theme_class} model::card:#{this.id}" %>
  <td class="#{klass}">
  <recursive-card aspect if="&can_view?(:name)" />
</td>
</def>


<div id="auto_completer" style="display:none" class="auto_complete"></div>







<def tag="trash" attrs="no-redirect" >
  <%
  tooltip             = "Permanently erase #{this.reference_name}"
  number_of_aspects   = this.aspects.length
  number_of_items     = this.items.length
  if number_of_aspects > 0
    if number_of_items > 0
      tooltip += ", its #{   number_of_aspects} aspects and its #{number_of_items} items"
    else
      tooltip += " and its #{number_of_aspects} items"
    end
  else # 0 aspects
    if number_of_items > 0
      tooltip += " and its #{number_of_items  } items"
    end
  end
  redirect_uri =
    if target = this.context then
    url_for(:action => params[:action], :id => target)
  else
    cards_url
  end

  #if attributes[:no_redirect] == "gggg" then
  #redirect_uri             = nil
  #attributes[:no_redirect] = nil
  #end
  %>
  <!-- <delete-button
                 with="&this" after-submit="&redirect_uri" title="#{tooltip}"
                 label="Erase!" class="nav-button" image="icons/bin_closed.png " /> -->
  <delete-button with="&this"  title="#{tooltip}"
                 label="Erase!" class="nav-button"                               />
</def>


<def tag="bottom-controls">
  <table class="bottom-controls">
    <tr   class="bottom-controls">
      <td class="bottom-controls">
    <add-row/>
    <add-pad-rows/>
    </td>
    <td class="bottom-controls">
    <start-any-list if="&true || this && this.items.count == 0" />
    <if test="&false && can_edit?(:pad)" ><editor:pad/>Pad</if>           <%
    new_card = Card.new :list_id  => this.id            ,
      :suite_id => this.suite_group.id          %>
    <br if="&false && this && this.items.count == 0 && can_create?(new_card)" />
    <editor:theme  if="&false && can_edit?(:theme)" />
    <editor:access if="&can_edit?(:access) && !this.suite" />
    <br if="&false && can_edit?(:theme) || can_edit?(:access) && !this.suite" />
    <toggle-aspect-or-item which="items" with="&this" />

    <show-card-inline />
    <trash />
    </td>
    <!--td class="core-add-item"><add-rows /></td>-->
    <!--<td class="go"   ><show-card-inline /></td>
    <td class="theme"><editor:theme     /></td>
    <td class="access"><editor:access if="&can_edit? :access"/></td>
    <td class="toggle"><toggle-aspect-or-item which="items" with="&this"/></td>
    <td class="core-body-toggle"><toggle-body if="&scope.deep[:action] != 'list'"/></td>
    <td class="core-trash"><trash/></td-->
    </tr>
  </table>
</def>



<div id="bottom-control-<%= this.id %>">
<bottom-controls />

</div>




<%= javascript_include_tag "prototype, effects, dragdrop, controls, lowpro, hobo-rapid, toy, jquery, jquery.lavalamp, jquery.easing" %>
<%= javascript_include_tag "application" %>

<%= stylesheet_link_tag "reset, hobo-rapid" %>
<%= stylesheet_link_tag "application" %>

